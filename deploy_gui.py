from PyQt5.QtWidgets import (
    QApplication, QWidget, QVBoxLayout, QLabel, QLineEdit,
    QPushButton, QFileDialog, QCheckBox, QTextEdit, QMessageBox
)
from PyQt5.QtGui import QIcon
import subprocess
import os
import sys

class DeployTool(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("üöÄ Librarian AI ‚Äî Deploy Tool")
        self.setGeometry(100, 100, 540, 420)
        self.setWindowIcon(QIcon("logo.png"))
        self.init_ui()

    def init_ui(self):
        layout = QVBoxLayout()

        self.repo_path = QLineEdit()
        self.repo_path.setPlaceholderText("üìÅ –ü—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É –ø—Ä–æ–µ–∫—Ç—É")

        self.remote_url = QLineEdit()
        self.remote_url.setPlaceholderText("üåê URL GitHub-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, git@...)")

        browse_btn = QPushButton("üîç –í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É")
        browse_btn.clicked.connect(self.select_folder)

        self.git_check = QCheckBox("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ GitHub")
        self.git_check.setChecked(True)
        self.yadisk_check = QCheckBox("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ (–∑–∞–≥–ª—É—à–∫–∞)")

        deploy_btn = QPushButton("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–ø–ª–æ–π")
        deploy_btn.clicked.connect(self.deploy_project)

        self.output = QTextEdit()
        self.output.setReadOnly(True)

        layout.addWidget(QLabel("üìÅ –ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É:"))
        layout.addWidget(self.repo_path)
        layout.addWidget(browse_btn)

        layout.addWidget(QLabel("üåê URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–µ—Å–ª–∏ –Ω–æ–≤—ã–π):"))
        layout.addWidget(self.remote_url)

        layout.addWidget(self.git_check)
        layout.addWidget(self.yadisk_check)
        layout.addWidget(deploy_btn)
        layout.addWidget(QLabel("ü™µ –í—ã–≤–æ–¥:"))
        layout.addWidget(self.output)

        self.setLayout(layout)

    def log(self, msg):
        self.output.append(msg)

    def select_folder(self):
        folder = QFileDialog.getExistingDirectory(self, "–í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É")
        if folder:
            self.repo_path.setText(folder)

    def run_git(self, cmd_list, cwd):
        return subprocess.run(cmd_list, cwd=cwd, capture_output=True, text=True)

    def deploy_project(self):
        path = self.repo_path.text().strip()
        remote_url = self.remote_url.text().strip()

        if not os.path.isdir(path):
            QMessageBox.critical(self, "‚ùå –û—à–∏–±–∫–∞", "–£–∫–∞–∑–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            return

        os.chdir(path)

        if self.git_check.isChecked():
            self.log("üß© Git –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...")

            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è git
            if not os.path.isdir(os.path.join(path, ".git")):
                self.run_git(["git", "init"], path)
                self.log("‚úÖ Git –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ remote origin
            if remote_url:
                self.run_git(["git", "remote", "remove", "origin"], path)
                self.run_git(["git", "remote", "add", "origin", remote_url], path)
                self.log(f"üîó –î–æ–±–∞–≤–ª–µ–Ω origin: {remote_url}")

            # Git push
            self.run_git(["git", "add", "."], path)
            self.run_git(["git", "commit", "-m", "üöÄ Auto-deploy from Librarian AI GUI"], path)
            push_result = self.run_git(["git", "push", "-u", "origin", "main"], path)

            if push_result.returncode == 0:
                self.log("‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ GitHub")
            else:
                self.log("‚ùå –û—à–∏–±–∫–∞ push:\n" + push_result.stderr)

        if self.yadisk_check.isChecked():
            self.log("üì° –ó–∞–≥—Ä—É–∑–∫–∞ –≤ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ (–∑–∞–≥–ª—É—à–∫–∞)")

        self.log("üéâ –ì–æ—Ç–æ–≤–æ.")

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = DeployTool()
    window.show()
    sys.exit(app.exec_())
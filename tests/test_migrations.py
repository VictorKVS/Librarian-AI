# üìÑ tests/test_migrations.py
# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Alembic –º–∏–≥—Ä–∞—Ü–∏–π (upgrade –∏ downgrade)

import pytest
from alembic.config import Config
from alembic import command
from sqlalchemy import create_engine, inspect
from sqlalchemy.exc import OperationalError
import os
import shutil

# –í—Ä–µ–º–µ–Ω–Ω–∞—è –ë–î –¥–ª—è —Ç–µ—Å—Ç–æ–≤
TEST_DB_URL = "sqlite:///tests/test_migrations.sqlite"

@pytest.fixture(scope="module")
def alembic_config():
    # –ö–æ–ø–∏—è alembic.ini —Å –¥—Ä—É–≥–∏–º URL
    config = Config("alembic.ini")
    config.set_main_option("sqlalchemy.url", TEST_DB_URL)
    return config

@pytest.fixture(scope="function")
def clean_test_db():
    if os.path.exists("tests/test_migrations.sqlite"):
        os.remove("tests/test_migrations.sqlite")
    yield
    if os.path.exists("tests/test_migrations.sqlite"):
        os.remove("tests/test_migrations.sqlite")

def test_upgrade_downgrade(alembic_config, clean_test_db):
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    command.upgrade(alembic_config, "head")

    engine = create_engine(TEST_DB_URL)
    inspector = inspect(engine)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã
    tables = inspector.get_table_names()
    assert "session" in tables or len(tables) > 0

    # –û—Ç–∫–∞—Ç
    command.downgrade(alembic_config, "base")
    inspector = inspect(engine)
    assert inspector.get_table_names() == []

# üìÑ core/loader.py
# –ó–∞–º–µ–Ω–∏–º –≤—ã–∑–æ–≤ extract_files_from_archive() –≤—Ä–µ–º–µ–Ω–Ω–æ ‚Äî –∞—Ä—Ö–∏–≤—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã

import os
from utils.file_utils import (
    extract_text_from_pdf,
    extract_text_from_docx,
    extract_text_from_pptx,
    extract_text_from_xlsx,
    extract_text_from_odf,
    extract_text_from_html,
    extract_text_from_txt,
    extract_text_from_image
)
from typing import Optional

def load_file(path: str) -> str:
    ext = os.path.splitext(path)[-1].lower()
    
    # ‚ùå –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –∞—Ä—Ö–∏–≤—ã
    if ext in [".zip", ".rar", ".7z"]:
        raise NotImplementedError("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä—Ö–∏–≤–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä MSVC.")

    if ext == ".pdf":
        return extract_text_from_pdf(path)
    elif ext == ".docx":
        return extract_text_from_docx(path)
    elif ext == ".pptx":
        return extract_text_from_pptx(path)
    elif ext == ".xlsx":
        return extract_text_from_xlsx(path)
    elif ext == ".odt":
        return extract_text_from_odf(path)
    elif ext in [".html", ".htm"]:
        return extract_text_from_html(path)
    elif ext in [".txt", ".md"]:
        return extract_text_from_txt(path)
    elif ext in [".jpg", ".jpeg", ".png", ".bmp", ".tiff"]:
        return extract_text_from_image(path)
    else:
        raise ValueError(f"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞: {ext}")
    
    
def load_file_to_knowledge(path: str, session_id: Optional[str] = None):
    print(f"[DEBUG] –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π: {path}, session: {session_id}")
    content = load_file(path)
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å split_into_chunks(), embedder, extractor –∏ —Ç.–¥.
    return content

def parallel_load_files(folder: str, session_id: Optional[str] = None):
    print(f"[DEBUG] –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ –ø–∞–ø–∫–∏: {folder}, session: {session_id}")
    for root, _, files in os.walk(folder):
        for f in files:
            try:
                load_file_to_knowledge(os.path.join(root, f), session_id)
            except Exception as e:
                print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {f}: {e}")
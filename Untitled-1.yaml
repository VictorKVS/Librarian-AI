version: '3.8'

services:

  # üì¶ PostgreSQL + pgvector
  postgres:
    image: ankane/pgvector
    container_name: librarian_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: librarian
      POSTGRES_PASSWORD: secretpass
      POSTGRES_DB: librarian_db
    volumes:
      - pg_data:/var/lib/postgresql/data

  # ‚ö° Redis (–∫—ç—à, –æ—á–µ—Ä–µ–¥–∏, PubSub)
  redis:
    image: redis:6
    container_name: librarian_redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  # üîç Qdrant (–≤–µ–∫—Ç–æ—Ä–Ω–∞—è –ë–î)
  qdrant:
    image: qdrant/qdrant
    container_name: librarian_qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

  # üåê Web-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å + REST API
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: librarian_web
    command: uvicorn web.dashboard:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      DB_TYPE: postgresql
      DB_HOST: postgres
      DB_NAME: librarian_db
      DB_USER: librarian
      DB_PASSWORD: secretpass
      REDIS_HOST: redis
      QDRANT_HOST: qdrant
    depends_on:
      - postgres
      - redis
      - qdrant

  # üîÑ –§–æ–Ω–æ–≤—ã–π –≤–æ—Ä–∫–µ—Ä / –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è / auto-train
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: librarian_worker
    command: python utils/updater.py
    depends_on:
      - postgres
      - redis
      - qdrant
    environment:
      DB_HOST: postgres
      DB_USER: librarian
      DB_PASSWORD: secretpass

volumes:
  pg_data:
  qdrant_data:

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä	–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ	–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ	–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
#redis	–û—á–µ—Ä–µ–¥–∏ / –∫—ç—à	–ó–∞–¥–∞—á–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –ª–æ–≥–∏–∫–∞ —Ü–µ–ø–æ—á–µ–∫	–ë—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è, PubSub
#qdrant	–í–µ–∫—Ç–æ—Ä–Ω–∞—è –ë–î	Embedding-–∑–∞–ø—Ä–æ—Å—ã, –ø–æ–∏—Å–∫	ID –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö chunks, —Ç–æ–ø-N
#web	REST API / Web Dashboard	–ó–∞–ø—Ä–æ—Å—ã –æ—Ç CLI/Web/Telegram	–û—Ç–≤–µ—Ç—ã –º–æ–¥–µ–ª–µ–π, –≥—Ä–∞—Ñ—ã, JSON
#worker	–§–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏, –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è	–û–±—É—á–∞—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ, –æ—Ç–≤–µ—Ç—ã —Å –≤—ã—Å–æ–∫–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º	–ù–æ–≤—ã–π checkpoint / –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π
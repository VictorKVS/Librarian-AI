# üìÑ –§–∞–π–ª: graph_store.py
# üìÇ –ü—É—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏: librarian_ai/graph/graph_store.py
# üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–æ–º –∑–Ω–∞–Ω–∏–π –¥–ª—è GraphRAG (Neo4j)
# üì• –ü–æ–ª—É—á–∞–µ—Ç: —Å—É—â–Ω–æ—Å—Ç–∏ –∏ —Å–≤—è–∑–∏ –æ—Ç –º–æ–¥—É–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏/–∞–Ω–∞–ª–∏–∑–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, classifier –∏–ª–∏ enricher)
# ‚öôÔ∏è –î–µ–ª–∞–µ—Ç: —Å–æ–∑–¥–∞—ë—Ç, —Å–≤—è–∑—ã–≤–∞–µ—Ç –∏ —Ö—Ä–∞–Ω–∏—Ç —É–∑–ª—ã –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –≤ –≥—Ä–∞—Ñ–æ–≤–æ–π –ë–î
# üì§ –ü–µ—Ä–µ–¥–∞—ë—Ç: —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤ (—Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏) –≤ LLM –∏–ª–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ (—á–µ—Ä–µ–∑ retriever –∏–ª–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫—É)

from neo4j import GraphDatabase
from typing import List, Dict

class GraphStore:
    def __init__(self, uri="bolt://localhost:7687", user="neo4j", password="test"):
        self.driver = GraphDatabase.driver(uri, auth=(user, password))

    def close(self):
        self.driver.close()

    def add_entity(self, entity: str, label: str = "Concept"):
        with self.driver.session() as session:
            session.run("CREATE (e:%s {name: $name})" % label, name=entity)

    def add_relation(self, source: str, target: str, rel_type: str):
        with self.driver.session() as session:
            session.run(
                "MATCH (a {name: $source}), (b {name: $target}) "
                "MERGE (a)-[r:%s]->(b)" % rel_type,
                source=source, target=target
            )

    def query_related(self, entity: str, depth: int = 1) -> List[Dict]:
        with self.driver.session() as session:
            result = session.run(
                "MATCH (a {name: $name})-[*1..%d]-(b) RETURN DISTINCT b.name AS name" % depth,
                name=entity
            )
            return [record.data() for record in result]

    def clear_graph(self):
        with self.driver.session() as session:
            session.run("MATCH (n) DETACH DELETE n")


if __name__ == "__main__":
    store = GraphStore()
    store.clear_graph()
    store.add_entity("–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—è")
    store.add_entity("–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å")
    store.add_relation("–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—è", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å", "–£–ü–†–ê–í–õ–Ø–ï–¢")
    print(store.query_related("–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—è"))
    store.close()